This patch fixes a warning seen with gcc 4.8 (especially on ubuntu 13.10)

| addr2line.c: In function 'handle_address':
| addr2line.c:450:7: error: format '%a' expects argument of type 'float *', but argument 3 has type 'char **' [-Werror=format=]
|        if (sscanf (string, "(%a[^)])%" PRIiMAX "%n", &name, &addr, &i) == 2
|        ^
| addr2line.c:453:7: error: format '%a' expects argument of type 'float *', but argument 3 has type 'char **' [-Werror=format=]
|        switch (sscanf (string, "%a[^-+]%n%" PRIiMAX "%n", &name, &i, &addr, &j))
|        ^
| cc1: all warnings being treated as errors


%a is old GNU style and should be abandoned in favor of %m

Also see

http://gcc.gnu.org/bugzilla/show_bug.cgi?id=54361

to support this assertion

This patch is added via redhat-compatibility patch so lets revert this part
here.

Signed-off-by: Khem Raj <raj.khem@gmail.com>

Upstream-Status: Inappropriate [Caused by an earlier patch]

Index: elfutils-0.155/src/addr2line.c
===================================================================
--- elfutils-0.155.orig/src/addr2line.c
+++ elfutils-0.155/src/addr2line.c
@@ -447,10 +447,10 @@ handle_address (const char *string, Dwfl
       bool parsed = false;
       int i, j;
       char *name = NULL;
-      if (sscanf (string, "(%a[^)])%" PRIiMAX "%n", &name, &addr, &i) == 2
+      if (sscanf (string, "(%m[^)])%" PRIiMAX "%n", &name, &addr, &i) == 2
 	  && string[i] == '\0')
 	parsed = adjust_to_section (name, &addr, dwfl);
-      switch (sscanf (string, "%a[^-+]%n%" PRIiMAX "%n", &name, &i, &addr, &j))
+      switch (sscanf (string, "%m[^-+]%n%" PRIiMAX "%n", &name, &i, &addr, &j))
 	{
 	default:
 	  break;
